/*
* Todos os direitos reservados. É proibido copiar o código fonte.
 */
package visitas.hoken.janelas.principal;

import java.awt.Font;
import java.awt.Toolkit;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import visitas.hoken.controle.VisitasControleJanelas;
import visitas.hoken.janelas.gerencia.*;
import visitas.hoken.modelos.Login;
import visitas.hoken.persistencia.LoginDAO;
import visitas.hoken.persistencia.VisitasDAO;
import visitas.hoken.utils.MD5;

/**
 * @author Elaine Cecília Gatto - Cissa elainececiliagatto@gmail.com
 */
public class JanelaPrincipal extends javax.swing.JFrame {

    VisitasControleJanelas control = new VisitasControleJanelas();
    JOptionPane jp = new JOptionPane();
    ImageIcon erro = new ImageIcon(getClass().getResource("/visitas/hoken/imagens/erro.png"));
    ImageIcon salvo = new ImageIcon(getClass().getResource("/visitas/hoken/imagens/salvar.png"));
    Icon iconeJP = new ImageIcon(getToolkit().createImage(getClass().getResource("/visitas/hoken/imagens/h.jpeg")));
    Login login = new Login();
    VisitasDAO dao = new VisitasDAO();

    /**
     * Creates new form JanelaPrincipal
     */
    public JanelaPrincipal() {
        initComponents();
        setIcon();
        this.setLocationRelativeTo(null);
        UIManager.put("OptionPane.messageFont", new Font("Tahoma", Font.BOLD, 18));
        jLbIcone.setHorizontalAlignment((int) CENTER_ALIGNMENT);
        
        //Botão default
        getRootPane().setDefaultButton(jBLogar);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLbIcone = new javax.swing.JLabel();
        js_Principal = new javax.swing.JSeparator();
        jLNome = new javax.swing.JLabel();
        jLSenha = new javax.swing.JLabel();
        jPF_senha = new javax.swing.JPasswordField();
        jTF_nome = new javax.swing.JTextField();
        jBLogar = new javax.swing.JButton();
        jBSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hoken Visitas | Login");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(255, 153, 153));
        setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        setMinimumSize(new java.awt.Dimension(430, 265));
        setName("JanelaPrincipal"); // NOI18N
        setResizable(false);
        setSize(new java.awt.Dimension(430, 265));

        jLbIcone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/visitas/hoken/imagens/hokentubnaill.png"))); // NOI18N
        jLbIcone.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLbIcone.setAlignmentX(0.5F);
        jLbIcone.setMaximumSize(new java.awt.Dimension(33000, 33000));
        jLbIcone.setMinimumSize(new java.awt.Dimension(300, 78));
        jLbIcone.setName("jLabelPrincipal"); // NOI18N
        jLbIcone.setPreferredSize(new java.awt.Dimension(800, 80));

        js_Principal.setToolTipText("");
        js_Principal.setAutoscrolls(true);

        jLNome.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLNome.setForeground(new java.awt.Color(102, 0, 51));
        jLNome.setText("Nome de Usuário:");

        jLSenha.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLSenha.setForeground(new java.awt.Color(102, 0, 51));
        jLSenha.setText("Senha:");

        jPF_senha.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jTF_nome.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTF_nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_nomeActionPerformed(evt);
            }
        });

        jBLogar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBLogar.setForeground(new java.awt.Color(102, 0, 51));
        jBLogar.setText("Logar");
        jBLogar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLogarActionPerformed(evt);
            }
        });

        jBSair.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBSair.setForeground(new java.awt.Color(102, 0, 51));
        jBSair.setText("Sair");
        jBSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jBSair)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBLogar))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPF_senha, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLNome, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(jTF_nome, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(20, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(js_Principal)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jLbIcone, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLbIcone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(js_Principal, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLNome)
                    .addComponent(jTF_nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLSenha)
                    .addComponent(jPF_senha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBLogar)
                    .addComponent(jBSair))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTF_nomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_nomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTF_nomeActionPerformed

    private void jBLogarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLogarActionPerformed
        String nome = jTF_nome.getText();
        String senha = new String(jPF_senha.getPassword());
        Login l = new Login();
        if ((jTF_nome.getText().trim().equals("")) && (senha.trim().equals(""))) {
            jp.showMessageDialog(rootPane, "Campos vazios! \nPreencha corretamente todos os campos do formulário de login.", "ATENÇÃO!", jp.WARNING_MESSAGE);
        } else if (!"".equals(jTF_nome.getText()) && (senha.trim().equals(""))) {
            jp.showMessageDialog(rootPane, "O campo SENHA está vazio! \nPreencha corretamente todos os campos do formulário de login.", "ATENÇÃO!", jp.WARNING_MESSAGE);
        } else if (!"".equals(senha) && (jTF_nome.getText().trim().equals(""))) {
            jp.showMessageDialog(rootPane, "O campo NOME DE USUÁRIO está vazio! \nPreencha corretamente todos os campos do formulário de login.", "ATENÇÃO!", jp.WARNING_MESSAGE);
        } else {
            try {
                
                nome = jTF_nome.getText();
                senha = new String(jPF_senha.getPassword());
                

                //Versão criptografada
                MD5 md5 = new MD5();
                LoginDAO dao = new LoginDAO();
                                   
                if(dao.Login(nome, md5.criptografar(senha))){
                    JOptionPane.showMessageDialog(this, "Login efetuado com sucesso");
                    this.setVisible(false);
                                        
                    JanelaVisitas jfap = new JanelaVisitas();
                    jfap.setVisible(true);
                    
                }
                else{
                            jp.showMessageDialog(rootPane, "\n Tanto o seu nome de usuário, "
                            + "\n quanto sua senha estão errados,"
                            + "\n ou talvez você não esteja cadastrado! "
                            + "\n\n Verifique seu nome de usuário e senha!"
                            + "\n\n Se você não possui cadastro, por favor,"
                            + "\n ligue para 14-9-9102-6306 \n\n", "ERRO!", jp.WARNING_MESSAGE);
                }
                
                
                /*
                //Versão antiga
                
                String nomeconferido = dao.confereNome(nome);
                String senhaConferida = dao.confereSenha(senha);
                
                if (nome.equals(nomeconferido) && !senha.equals(senhaConferida)) {
                    jp.showMessageDialog(rootPane, "Sua senha está errada! \n Digite novamente!", "ERRO!", jp.WARNING_MESSAGE);
                } else if (!nome.equals(nomeconferido) && senha.equals(senhaConferida)) {
                    jp.showMessageDialog(rootPane, "Seu nome de usuário está errado! \n Digite novamente!", "ERRO!", jp.WARNING_MESSAGE);
                } else if (nome.equals(nomeconferido) && senha.equals(senhaConferida)) {
                    jp.showMessageDialog(rootPane, "Login Efetuado com Sucesso!", "LOGADO!", jp.INFORMATION_MESSAGE);
                    setVisible(false);
                    JanelaVisitas jfap = new JanelaVisitas();
                    jfap.setVisible(true);
                } else if (!nome.equals(nomeconferido) && !senha.equals(senhaConferida)) {
                    jp.showMessageDialog(rootPane, "\n Tanto o seu nome de usuário, "
                            + "\n quanto sua senha estão errados,"
                            + "\n ou talvez você não esteja cadastrado! "
                            + "\n\n Verifique seu nome de usuário e senha!"
                            + "\n\n Se você não possui cadastro, por favor,"
                            + "\n ligue para 14-9-9102-6306 \n\n", "ERRO!", jp.WARNING_MESSAGE);
                } else {
                    jp.showMessageDialog(rootPane, "O Login não pôde ser efetuado! "
                            + "\n Talvez o usuário não esteja cadastrado.", "ERRO!", jp.INFORMATION_MESSAGE, erro);
                }
                /*
                boolean result = control.Login(nome, senha);
                if (result == true) {
                    jp.showMessageDialog(rootPane, "Login Efetuado com Sucesso!", "LOGADO!", jp.INFORMATION_MESSAGE);
                    setVisible(false);
                    JanelaVisitas jfap = new JanelaVisitas();
                    jfap.setVisible(true);
                } else {
                    jp.showMessageDialog(rootPane, "O Login não pôde ser efetuado! "
                            + "\n Talvez o usuário não esteja cadastrado. "
                            + "\n Talvez sua senha ou seu login estejam incorretos. ", "ERRO!", jp.INFORMATION_MESSAGE, erro);
                }*/
                       
                
                
                
            } catch (Exception e) {
                jp.showMessageDialog(rootPane, "ERRO! "
                        + "\n Causa:" + e.getCause(), "ERRO", jp.ERROR_MESSAGE, erro);
                System.err.println("\n============================================");
                System.err.println("\nCLASSE JANELA LOGIN");
                System.err.println("\nERRO NO jBLogarActionPerformed");
                System.err.println("\nCAUSA: " + e.getCause());
                System.err.println("\nMENSAGEM " + e.getMessage());
                e.printStackTrace();
                System.err.println("\n============================================");
            }
        }
        limparCampos();
    }//GEN-LAST:event_jBLogarActionPerformed

    private void jBSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jBSairActionPerformed
        
                
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {


        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("SeaGlassLookAndFeel".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBLogar;
    private javax.swing.JButton jBSair;
    private javax.swing.JLabel jLNome;
    private javax.swing.JLabel jLSenha;
    private javax.swing.JLabel jLbIcone;
    private javax.swing.JPasswordField jPF_senha;
    private javax.swing.JTextField jTF_nome;
    private javax.swing.JSeparator js_Principal;
    // End of variables declaration//GEN-END:variables

    public void limparCampos() {
        jTF_nome.setText("");
        jPF_senha.setText("");
    }

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/visitas/hoken/imagens/h.jpeg")));
    }
}
